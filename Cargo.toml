[package]
name = "SAM_CAM_BAM"
version = "0.1.0"
authors = ["Omar "]
edition = "2021"
include = ["LICENSE-APACHE", "LICENSE-MIT", "**/*.rs", "Cargo.toml"]
rust-version = "1.81"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
egui = "0.30"
eframe = { version = "0.30", default-features = false, features = [
    "accesskit",     # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
] }
log = "0.4"

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
image = "0.25.6"

[dependencies.nokhwa]
version = "0.10.7"
# Use the native input backends, enable WGPU integration
features = ["input-native", "output-wgpu"]

[package.metadata.patch]
crates = ["nokhwa-bindings-macos"]

[patch.crates-io]
nokhwa-bindings-macos = { path = "target/patch/nokhwa-bindings-macos-0.2.2" }

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4"
web-sys = "0.3.70"           # to access the DOM (to hide the loading text)

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2

